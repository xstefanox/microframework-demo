plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.3.21' apply false
    id 'com.github.johnrengelman.shadow' version '4.0.4' apply false
    id 'org.jlleitschuh.gradle.ktlint' version '6.3.1' apply false
    id 'com.palantir.docker' version '0.21.0' apply false
}

group 'io.github.xstefanox'
version '1.0-SNAPSHOT'

apply plugin: 'idea'

subprojects {

    apply plugin: 'kotlin'
    apply plugin: 'org.jlleitschuh.gradle.ktlint'

    test {
        useJUnitPlatform()
    }

    repositories {
        jcenter()
    }

    dependencies {
        implementation group: 'org.jetbrains.kotlin', name: 'kotlin-stdlib-jdk8'
        implementation group: 'org.jetbrains.kotlinx', name: 'kotlinx-coroutines-core'
        implementation group: 'org.slf4j', name: 'slf4j-simple'
        implementation group: 'io.github.microutils', name: 'kotlin-logging'
        implementation group: 'com.typesafe', name: 'config'
        implementation group: 'org.kodein.di', name: 'kodein-di-generic-jvm'

        testImplementation group: 'io.kotlintest', name: 'kotlintest-runner-junit5'
    }

    compileKotlin {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8

        kotlinOptions {
            jvmTarget = "1.8"
            apiVersion = "1.3"
            languageVersion = "1.3"
        }
    }

    compileTestKotlin {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8

        kotlinOptions {
            jvmTarget = "1.8"
            apiVersion = "1.3"
            languageVersion = "1.3"
        }
    }

    test {
        testLogging {
            events "passed", "skipped", "failed", "standardOut", "standardError"
        }
    }

    ktlint {
        outputToConsole = true
    }
}

project(':platform') {

    dependencies {
        constraints {
            api group: 'org.jetbrains.kotlin', name: 'kotlin-stdlib-jdk8', version: '1.3.21'
            api group: 'io.undertow', name: 'undertow-core', version: '2.0.16.Final'
            api group: 'io.github.xstefanox', name: 'underkow', version: '2.1.1'
            api group: 'org.jetbrains.kotlinx', name: 'kotlinx-coroutines-core', version: '1.1.1'
            api group: 'org.slf4j', name: 'slf4j-simple', version: '1.7.25'
            api group: 'io.github.microutils', name: 'kotlin-logging', version: '1.6.22'
            api group: 'com.typesafe', name: 'config', version: '1.3.3'
            api group: 'org.kodein.di', name: 'kodein-di-generic-jvm', version: '6.0.1'
            api group: 'io.kotlintest', name: 'kotlintest-runner-junit5', version: '3.2.1'
            api group: 'io.rest-assured', name: 'rest-assured', version: '3.3.0'
            api group: 'org.apache.camel', name: 'camel-core', version: '2.23.1'
            api group: 'org.apache.camel', name: 'camel-rabbitmq', version: '2.23.1'
            api group: 'com.github.ajalt', name: 'clikt', version: '1.6.0'
            api group: 'org.litote.kmongo', name: 'kmongo-coroutine', version: '3.9.2'
            api group: 'org.jetbrains.exposed', name: 'exposed', version: '0.12.1'
            api group: 'mysql', name: 'mysql-connector-java', version: '8.0.15'
        }
    }
}

project(':core') {
    dependencies {
        implementation platform(project(':platform'))
    }
}

project(':rest') {
    dependencies {
        implementation platform(project(':platform'))
        implementation project(':core')
        implementation group: 'io.undertow', name: 'undertow-core'

        testImplementation group: 'io.rest-assured', name: 'rest-assured'
    }
}

project(':rest-user') {

    apply plugin: 'application'
    apply plugin: 'com.github.johnrengelman.shadow'
    apply plugin: 'com.palantir.docker'

    mainClassName = 'io.github.xstefanox.demo.mf.rest.user.Main'

    dependencies {
        implementation platform(project(':platform'))
        implementation project(':core')
        implementation group: 'io.undertow', name: 'undertow-core'
        implementation group: 'io.github.xstefanox', name: 'underkow'
        implementation group: 'org.litote.kmongo', name: 'kmongo-coroutine'
    }

    shadowJar {
        archiveBaseName.set('service')
    }

    docker {
        name = "xstefanox/rest-user"
        files tasks.shadowJar.outputs
        buildArgs([jar: "service.jar"])
    }
}

project(':rest-purchase') {

    apply plugin: 'application'
    apply plugin: 'com.github.johnrengelman.shadow'
    apply plugin: 'com.palantir.docker'

    mainClassName = 'io.github.xstefanox.demo.mf.rest.purchase.Main'

    dependencies {
        implementation platform(project(':platform'))
        implementation project(':core')
        implementation group: 'io.undertow', name: 'undertow-core'
        implementation group: 'io.github.xstefanox', name: 'underkow'
        implementation group: 'org.jetbrains.exposed', name: 'exposed'
        implementation group: 'mysql', name: 'mysql-connector-java'
    }

    shadowJar {
        archiveBaseName.set('service')
    }

    docker {
        name = "xstefanox/rest-purchase"
        files tasks.shadowJar.outputs
        buildArgs([jar: "service.jar"])
    }
}

project(':backend') {
    dependencies {
        implementation platform(project(':platform'))
        implementation project(':core')
        implementation group: 'org.apache.camel', name: 'camel-core'
        implementation group: 'org.apache.camel', name: 'camel-rabbitmq'
    }
}

project(':cli') {

    apply plugin: 'application'
    apply plugin: 'com.github.johnrengelman.shadow'

    mainClassName = 'io.github.xstefanox.demo.mf.cli.Main'

    dependencies {
        implementation platform(project(':platform'))
        implementation project(':core')
        implementation group: 'com.github.ajalt', name: 'clikt', version: '1.6.0'
    }
}

project(':service') {

    apply plugin: 'application'
    apply plugin: 'com.github.johnrengelman.shadow'

    mainClassName = 'io.github.xstefanox.demo.mf.Main'

    dependencies {
        implementation platform(project(':platform'))
        implementation project(':core')
        implementation project(':backend')
        implementation project(':rest')

        testImplementation group: 'io.rest-assured', name: 'rest-assured'
    }
}

task shadow {
    dependsOn("service:shadowJar")
    dependsOn("cli:shadowJar")
    dependsOn("rest-user:shadowJar")
    dependsOn("rest-purchase:shadowJar")
}
